#!/usr/bin/env python3
# Author: Edoardo Paolo Scalafiotti <edoardo849@gmail.com>
import os
from time import sleep
import signal
import sys
import RPi.GPIO as GPIO
import Adafruit_DHT

pin = 18 # The pin ID, edit here to change it
maxTMP = 50 # The maximum temperature in Celsius after which we trigger the fan
sleepTime = 30 # The time to sleep between temp checks

def setup():
    GPIO.setmode(GPIO.BCM)
    GPIO.setup(pin, GPIO.OUT)
    GPIO.setwarnings(False)
    return()
	
def gettemperature():
   while True:
     temperature = Adafruit_DHT.read_retry(11, 4)
   
    print("temperature is {0}".format(temperature)) #Uncomment here for testing
    return temperature
	
def fanON():
    print("Fan on ...")
    setPin(True)
    return()
	
def fanOFF():
    print("Fan off ...")
    setPin(False)
    return()
	
def getTEMP():
    Temp = float(gettemperature())
    if Temp > maxTMP:
        fanON()
        sleep(sleepTime) # Sleep additional time in order to ensure that we stay below max temp ...
    else:
        fanOFF()
    return()
	
def setPin(mode): # A little redundant function but useful if you want to add logging
    GPIO.output(pin, mode)
    return()
	
try:
    setup() 
    while True:
        getTEMP()
        sleep(sleepTime) # Read the temperature every x amount of seconds ...
except KeyboardInterrupt: # trap a CTRL+C keyboard interrupt 
    GPIO.cleanup() # resets all GPIO ports used by this script
